async function verifierToken() {
  // üö´ √âvite une boucle : si on est d√©j√† sur unauthorized.html, on ne v√©rifie rien
  if (window.location.pathname.endsWith("unauthorized.html")) {
    return;
  }

  const params = new URLSearchParams(window.location.search);
  const token = params.get("token");

  if (!token) {
    console.warn("‚ùå Aucun token trouv√© dans l'URL.");
    window.location.href = "unauthorized.html";
    return;
  }

  try {
    const response = await fetch("https://diploma.exoteach.com/medibox2-api/graphql", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "X-Token": token,
      },
      body: JSON.stringify({
        query: "{ me { id name } }", // requ√™te prot√©g√©e √† adapter selon l‚ÄôAPI
      }),
    });

    const json = await response.json();

    if (json.errors) {
      console.warn("‚ùå Token invalide ou refus√© :", json.errors[0].message);
      window.location.href = "unauthorized.html";
    } else {
      console.log("‚úÖ Token valide. Acc√®s autoris√©.");
      console.log("Donn√©es :", json.data);
    }

  } catch (err) {
    console.error("‚ùå Erreur de requ√™te :", err);
    window.location.href = "unauthorized.html";
  }
}

// ‚ñ∂Ô∏è Lancer la v√©rification au chargement
verifierToken();
